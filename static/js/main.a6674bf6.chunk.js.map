{"version":3,"sources":["assets/marvel.png","components/Header.js","components/Search.js","components/Card.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Search","searchName","onChange","icon","faSearch","size","style","color","type","placeholder","value","Card","char_id","char_name","char_image","onClick","bookmarked","faBookmark","id","Footer","App","displayedChars","useState","characters","setCharacters","isLoading","setIsLoading","searchedChars","setSearchedChars","keyword","setKeyword","touched","setTouched","isActive","setIsActive","getCharacters","a","axios","data","results","console","log","useEffect","filter","character","name","toLowerCase","includes","itemsFromStorage","JSON","parse","localStorage","getItem","e","target","map","thumbnail","path","extension","storedChars","length","push","document","getElementById","classList","add","find","char","remove","setItem","stringify","handleClickCard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6674bf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel.0e5d87ca.png\";","import React from 'react'\r\n\r\nimport './Header.css'\r\nimport logo from '../assets/marvel.png'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <img className='logo' src={logo} alt='Marvel Logo' />\r\n      <h1 className='text'>Characters</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport './Search.css'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Search = ({ searchName, onChange }) => {\r\n  return (\r\n    <div className='search-box-container'>\r\n      <div className='search-icon-container'>\r\n        <FontAwesomeIcon\r\n          icon={faSearch}\r\n          size='lg'\r\n          style={{ color: '#dee2e6' }}\r\n        />\r\n      </div>\r\n      <input\r\n        className='search-input'\r\n        type='text'\r\n        placeholder='Search characters...'\r\n        value={searchName}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nimport './Card.css'\r\nimport { faBookmark } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst Card = ({ char_id, char_name, char_image, onClick, bookmarked }) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <div className='char_image-container'>\r\n        <img src={char_image} alt={char_name} className='char_image' />\r\n      </div>\r\n      <div className='header-container'>\r\n        <div className='char_text-container'>\r\n          <h2 className='char_text'>{char_name}</h2>\r\n        </div>\r\n        <button className='icon-container'>\r\n          <FontAwesomeIcon\r\n            icon={faBookmark}\r\n            size='lg'\r\n            id={char_id}\r\n            className={`${bookmarked ? 'icon-bookmarked' : 'icon'}`}\r\n            onClick={onClick}\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='footer'>\r\n      <h3 className='footer-text'>Data provided by Marvel. Â© 2014 Marvel</h3>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Header from './components/Header'\nimport Search from './components/Search'\nimport Card from './components/Card'\nimport Footer from './components/Footer'\n\nimport './App.css'\n\nconst App = () => {\n  const [characters, setCharacters] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchedChars, setSearchedChars] = useState([])\n  const [keyword, setKeyword] = useState('')\n  const [touched, setTouched] = useState(false)\n  const [isActive, setIsActive] = useState(false)\n\n  const handleClickCard = (character) => {\n    let itemsFromStorage = JSON.parse(localStorage.getItem('bookmarkedChars'))\n    let storedChars = itemsFromStorage || []\n    if (storedChars === null || storedChars.length === 0) {\n      storedChars.push(character)\n      document.getElementById(character.id).classList.add('icon-bookmarked')\n    } else if (storedChars.find((char) => char.name === character.name)) {\n      storedChars = itemsFromStorage.filter(\n        (char) => char.name !== character.name\n      )\n      document.getElementById(character.id).classList.remove('icon-bookmarked')\n    } else {\n      storedChars = [...storedChars, character]\n      document.getElementById(character.id).classList.add('icon-bookmarked')\n    }\n    localStorage.setItem('bookmarkedChars', JSON.stringify(storedChars))\n  }\n\n  const getCharacters = async () => {\n    try {\n      setIsLoading(true)\n      const { data } = await axios(\n        `https://gateway.marvel.com/v1/public/characters?apikey=5fe4afe0378a32c44a0b500cb377b926`\n      )\n\n      const characters = data.data.results\n      console.log(characters)\n      setCharacters(characters)\n      setIsLoading(false)\n    } catch (error) {\n      console.log(`Error getting the data: `, error)\n    }\n  }\n\n  const onChange = (e) => {\n    setKeyword(e.target.value)\n    setTouched(true)\n  }\n\n  useEffect(() => {\n    getCharacters()\n  }, [])\n\n  useEffect(() => {\n    setSearchedChars(\n      characters.filter((character) =>\n        character.name.toLowerCase().includes(keyword.toLowerCase())\n      )\n    )\n  }, [keyword, characters])\n\n  let displayedChars\n\n  if (!touched && keyword === '') {\n    displayedChars = characters\n  } else if (touched && keyword !== '') {\n    displayedChars = searchedChars\n  } else {\n    let itemsFromStorage = JSON.parse(localStorage.getItem('bookmarkedChars'))\n\n    if (itemsFromStorage === null) {\n      displayedChars = searchedChars\n    } else {\n      displayedChars = itemsFromStorage\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <main className='main-container'>\n        <div className='search-box'>\n          <Search value={keyword} onChange={onChange} />\n        </div>\n        {!isLoading && (\n          <div className='grid-layout'>\n            {displayedChars.map((character) => (\n              <Card\n                key={character.id}\n                char_name={character.name}\n                char_image={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n                char_id={character.id}\n                onClick={() => {\n                  handleClickCard(character)\n                  setIsActive(!isActive)\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}